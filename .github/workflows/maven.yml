# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Set private jwt cert
      run: echo "${{ secrets.JWT_PRIVATE_CERT }}" >> ./ServerGuard.Api/src/main/resources/certs/private.pem
      
    - name: Set public jwt cert
      run: echo "${{ secrets.JWT_PUBLIC_CERT }}" >> ./ServerGuard.Api/src/main/resources/certs/public.pem
      
    - name: Set spring secrets.yaml
      run: echo "${{ secrets.SPRING_SECRETS }}" >> ./ServerGuard.Api/src/main/resources/secrets.yml
    
    - name: Build with Maven
      run: mvn -B package --file ./ServerGuard.Api/pom.xml
      
    - name: Show contents of the current working directory
      run: ls -la ./ServerGuard.Api
      
    - name: Show contents of the target directory
      run: ls -la ./ServerGuard.Api/target
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push docker image
      uses: docker/build-push-action@v6
      with:
        context: ./ServerGuard.Api
        push: true
        tags: mmieczkowski/serverguard:latest
